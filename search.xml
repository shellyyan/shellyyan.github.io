<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[浅谈java的内存分析]]></title>
      <url>%2F2017%2F01%2F20%2Ftechnology%2Fjava1%2F</url>
      <content type="text"><![CDATA[想对之前学习java的内存分析做个总结，故有了此文。java的程序运行在JVM(Java Virtual Machine),也就是java虚拟机上，JVM可以理解为java程序与操作系统之间的桥梁，java的平台无关性就是基于JVM来实现的。下面来总结下java程序在运行过程中所涉及的内存区域。 ###一、栈(stack) 栈是用来存放局部变量值的地方。这个值一般有以下两种情况，基本数据类型的值和引用类型的变量（实例）。这里要注意的是，对于基本数据类型，栈保存的是它的值，二对于引用类型的变量，保存的是一个指向堆区的指针。 所以，普通类型变量只是在栈区占用一块内存，而引用类型变量要在栈区和堆区各占一块内存。 ###二、堆(heap) 堆是用来存放动态生成的数据，比如new出来的对象。要注意创建出来的对象只包含属于各自的成员变量，并不包括成员方法。因为同一个类的每个对象拥有各自的成员变量，存储在各自的堆中，但它们共享该类的方法。 #####PS:待方法执行完毕后，栈空间中局部变量的值被释放，但是堆空间的值没有立即被回收，要等到栈中没有任何指针指向这个对象时，且要等JVM回收机制回收时，堆空间的值才会被释放。 ###三、代码段(code segment) 顾名思义，就是存放代码的地方。 ###四、数据段(data segment) 用来存放static定义的静态成员变量、字符串常亮。 #####注意：区分实例和对象 例：Cat a = new Cat();此时的a叫做实例，而不是叫做对象。实例在栈中，对象在堆中，操作实例实际上是通过实例的指针间接地操作对象。多个实例可以指向同一个对象。 ###内存调用过程演示写个简单的例子： public class Test{ public static void main(String[] args){ Cat c1 = new Cat(5,8); int i = 5； } } public class Cat{ float weight; float height; Cat(float _weight,float _height){ weight = _weight; height = _height; } } 下面是内存调用图： 程序的入口为main主函数。执行第一句代码，创建了一个c1的实例，在栈中分配了一块内存，存放一个指向堆区对象的指针XXXX。堆区为new出来的对象。创建了一个int类型的变量，由于是基本数据类型，直接存放在栈中，值为5。 ###小节：上面是java运行过程中所涉及到的知识点。我们所要掌握的是，在这里，无非就是两种类型的变量，基本类型和引用类型。二者作为局部变量，都存放在栈中，不同的是，基本类型变量直接存放的是值，引用类型变量存放的是指向堆中对象的指针。作为参数时，基本类型变量传值，引用类型变量传指针。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[web app]]></title>
      <url>%2F2017%2F01%2F06%2Ftechnology%2Fpython2%2F</url>
      <content type="text"><![CDATA[学完python基础知识后，就跟着教程做了一个小项目，一个用python写的Web App。这是一个blog网站，能实现日志、用户和评论这些功能。刚开始还比较轻松，后来到ORM框架的时候就卡壳了，还是基础打的不牢，可能也因为有点急功近利，毕竟想尽快用python做个小项目。于是，老老实实的回去复习了….学完，对项目中的一些逻辑更加清晰了。在后来的项目进程中，也会遇到各种问题，网上找资料，廖大网站上学友们的答疑解惑，真的帮助了不少，在此谢谢各位帮助过我的人。项目总算顺利完成了，下面贴上一张博客的截图，为了纪念一下我的劳动成果，哈哈… 贴图]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[初见python]]></title>
      <url>%2F2017%2F01%2F06%2Ftechnology%2Fpython1%2F</url>
      <content type="text"><![CDATA[起初学Python的时候，是因为要处理一些数据(实验室的实验)，了解到Python是一个很好的工具，就这样上了Python的道，嘻嘻….. 当初是跟着廖雪峰老师网站上pyhton教程走的。不得不说，廖大的教程真心不错，很适合我们初学者，简单明了，结构清晰，这里为廖大打个广告，希望优秀的资源能被更多的人分享。 喜欢Python的简洁，通常就是你以为是这样的，实际就是这样的，不知道这样说对不对，反正当时运用python的第三方库画图的时候超级酷，十几行代码就搞定了一个简单的图，好像python的画图功能跟matlab很相似，下面上代码，上图，举个特别简单的例子，就是这样爱上python的，哈哈。 贴代码import matplotlib as mplimport matplotlib.pyplot as pltimport numpy as npx=np.arange(0.0,6.0,0.1)plt.plot(x,[xi**2 for xi in x],label=&#39;First&#39;,linewidth=4,color=&#39;black&#39;)plt.plot(x,[xi**2+2 for xi in x],label=&#39;second&#39;,color=&#39;red&#39;)plt.plot(x,[xi**2+5 for xi in x],label=&#39;third&#39;)plt.axis([0,7,-1,50])plt.xlabel(r&quot;$\alpha$&quot;,fontsize=20)plt.ylabel(r&#39;y&#39;)plt.title(&#39;simple plot&#39;)plt.legend(loc=&#39;upper left&#39;)plt.grid(True)plt.savefig(&#39;simple plot.pdf&#39;,dpi=200)print(mpl.rcParams[&#39;figure.figsize&#39;])print(mpl.rcParams[&#39;savefig.dpi&#39;])print(mpl.rcParams[&#39;interactive&#39;])plt.show() 贴 图]]></content>
    </entry>

    
  
  
</search>
